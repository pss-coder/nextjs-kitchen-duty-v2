import Head from 'next/head'
import DutyCard from '../components/DutyCard'
import SettingModal from '../components/SettingModal'
import styles from '../styles/Home.module.css'

import { useState } from "react";

import {data} from "../lib/roster";



//import { PrismaClient } from '@prisma/client';

// const prisma = new PrismaClient()

export async function getServerSideProps() {
  const roster = data;
  return {
    props: {
      roster
    }
  }
}

export default function Home({roster}) {



  const [assignedRooms, setAssignedRooms] = useState(roster[0].assignedRooms)


  return (
    <div className={styles.container}>
      <Head>
        <title>Roster App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Kitchen</a>
        </h1>

        <p className={styles.description}>
          Lets do our part to keep our kitchen tidy and clean!
        </p>

        <p> {assignedRooms.join(", ")}</p>

        {/* <button onClick={() => {}} 
          className='bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded'>Add following week</button> */}

        {/* <SettingModal
          assignedRooms = {assignedRooms}
          saveAssignedRooms = {saveAssignedRooms}
         /> */}

        <div className={styles.grid}>
          {
            roster.map((item, index) => (
              <DutyCard 
                key = {item.weekNum}
                weekNum = {item.weekNum}
                year = {item.year}
                duty = {item.DutyRooms}
              />
            ))
          }
        </div>

        

        
        
      </main>

      <footer className={styles.footer}>
       <p>Powered by friendly 1208</p>
      </footer>
    </div>
  )
}

//TODO:


// const rooms = [1,2,3,6,7,8,9,10,11,12]

// helper function to randomise
// using  Fisher-Yates shuffle
// function shuffle(array) {
//   for (let i = array.length - 1; i > 0; i--) {
//     let j = Math.floor(Math.random() * (i + 1));
//     [array[i], array[j]] = [array[j], array[i]];
//   }
// }

// since there is 10rooms and 5 duties, if follow sequentially, duties will be performed by same people biweekly 
  // feedback: people want it randomise

// if length(rooms) < 10 || > 10, follow duties sequentially

// if length(rooms) == 10

// const firstHalf = rooms.slice(0,5)
// const lastHalf = rooms.slice(5, 10)

// console.log(firstHalf)
// console.log(lastHalf)

// shuffle(firstHalf)
// console.log(firstHalf)

// var assignedDuties = {
//   "38_2022": [1,2,3,4,6,7],
//   // Randmoise only take place when there is 10 rooms for 5 duties
//   "39_2022": // randomise 2nd half here,
//   "40_2022": // randomise 1st here, ensure room# are not assigned same duties,
//   "41_2022": // randomise 2nd half, ensure room# are not assigned same duties,
//   // repeat steps again and again...
// };